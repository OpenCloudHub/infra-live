name: Terragrunt CI

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  terragrunt-ci:
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.terraform.d/plugin-cache
      TG_VERSION: '0.82.3'
      TOFU_VERSION: '1.10.1'
      TG_DIR: '.'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Plugin Cache Dir
        run: mkdir -p $TF_PLUGIN_CACHE_DIR

      - name: Cache Terraform Plugins
        uses: actions/cache@v4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-plugin-cache-${{ hashFiles('**/versions.tf', '**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-plugin-cache-

      - name: Terragrunt Format Check
        id: fmt
        uses: gruntwork-io/terragrunt-action@v3
        env:
          TF_PLUGIN_CACHE_DIR: ${{ env.TF_PLUGIN_CACHE_DIR }}
        with:
          tg_version: ${{ env.TG_VERSION }}
          tofu_version: ${{ env.TOFU_VERSION }}
          tg_dir: ${{ env.TG_DIR }}
          tg_command: 'hcl format --check --all'

      - name: Terragrunt Validate
        id: validate
        uses: gruntwork-io/terragrunt-action@v3
        env:
          TF_PLUGIN_CACHE_DIR: ${{ env.TF_PLUGIN_CACHE_DIR }}
        with:
          tg_version: ${{ env.TG_VERSION }}
          tofu_version: ${{ env.TOFU_VERSION }}
          tg_dir: ${{ env.TG_DIR }}
          tg_command: 'validate --all'

      - name: Terragrunt Plan
        id: plan
        uses: gruntwork-io/terragrunt-action@v3
        env:
          TF_PLUGIN_CACHE_DIR: ${{ env.TF_PLUGIN_CACHE_DIR }}
        with:
          tg_version: ${{ env.TG_VERSION }}
          tofu_version: ${{ env.TOFU_VERSION }}
          tg_dir: ${{ env.TG_DIR }}
          tg_command: 'plan --all --no-color'
          tg_comment: true
          github_token: ${{ env.GITHUB_TOKEN }}
